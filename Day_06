import java.io.*;
import java.util.HashMap;
import java.util.*;


public class MyClass {
    
    public static void main(String args[])
    {
        HashMap<Integer, Long> hm1 = new HashMap<Integer, Long>();
        HashMap<Integer, Long> hm2 = new HashMap<Integer, Long>();
        
        try  
        {  
            File file = new File("/uploads/Day_6.txt");    //creates a new file instance  
            FileReader fr=new FileReader(file);   //reads the file  
            BufferedReader br=new BufferedReader(fr);  //creates a buffering character input stream  
            String line;
            String s="";
            while((line=br.readLine())!=null)  
            {
                s+=line;
            }
            fr.close();    //closes the stream and release the resources
            
            String[] num = s.split(",");
            for(int i=0; i<num.length; i++)
                addMapVals(hm1, Integer.parseInt(num[i]), 1);
            
            for(int i=0; i<256; i++)
            {
                for (Integer key : hm1.keySet())
                {
                    long val = hm1.get(key);
                    if(key == 0)
                    {
                        addMapVals(hm2, 0, 0);
                        addMapVals(hm2, 8, val);
                        addMapVals(hm2, 6, val);
                    }
                    else
                    {
                        addMapVals(hm2, key-1, val);
                        addMapVals(hm2, key, 0);
                    }
                }
                
                hm1.clear();
                hm1.putAll(hm2);
                hm2.clear();
            }
            Long val=0L;
            for (Integer key : hm1.keySet())
                val+=hm1.get(key);
            System.out.println(val);
        }
        catch(Exception e)  
        {  
            e.printStackTrace();  
        }
    }
    
    static void addMapVals(HashMap<Integer, Long> hm1, Integer key, long val)
    {
        if(hm1.containsKey(key))
            hm1.put(key, hm1.get(key) + val);
        else
            hm1.put(key, val);
    }
}
